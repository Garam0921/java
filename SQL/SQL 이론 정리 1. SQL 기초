SQL 이론 정리


SQL기초 -> SQL명령어 살펴보기 -> SQL 명령어(중급) -> 데이터 모델링(정규화)



● SQL 기초

/* SQL (Structured Query Langauge) 
: 구조화된 요청 언어
: Database에서 필요한 기능을 실행시키기 위한 명령어 모음
: 형태는 간단한 프로그래밍 명령어와 유사함
*/
use testdb; -- use 명령어는 database를 선택한다는 뜻

select * from 고객; -- 고객테이블의 모든 데이터 요청

select 고객번호, 담당자명, 고객회사명, 마일리지	
	from 고객; -- 특정 컬럼명을 명시하여 요청
	
select 고객번호, 담당자명, 고객회사명, 마일리지 as 포인트,
	마일리지 * 1.1 as "10% 인상된 마일리지"
	from 고객;
-- as는 별명. 인용부호""는 별명에 특수문자가 있을 경우 사용
-- 테이블내의 컬럼이외에 새로운 컬럼을 보여줄 수 있다(실제 저장안됨)

select 고객번호, 담당자명, 마일리지 from 고객
where 마일리지 >= 100000;
-- 원하는 데이터를 필터링하여 가져오고 싶을때 where를 사용함
-- 순서가 중요. select from where 순서대로 사용함

select 고객번호, 담당자명, 도시, 마일리지 from 고객
where 도시 = '서울특별시'
order by 마일리지 desc;
-- 역시 키워드 사용 순서가 중요함. order by가 제일 뒤
-- order by는 디폴트가 오름차순이므로 내림차순은 desc를 사용해야함
/* '서울특별시'처럼 단따옴표가 기본. 쌍따옴표는 대소문자가 구별되어야하는 
경우에만 사용하는것이 권장됨 */

select 고객번호, 담당자명, 도시, 마일리지 from 고객
where 도시 = '서울특별시'
order by 마일리지 desc 
limit 10;  -- limit은 읽어오는 데이터의 갯수를 제한함

select 고객번호, 담당자명, 도시, 마일리지 from 고객
where 도시 = '서울특별시'
order by 마일리지 desc 
limit 10, 10;  
/*내림차순이므로 상위 10명을 제외하고 그 이후 10명의 데이터를 읽는 방법임
**/

-- 고객들이 위치한 도시정보만 보도 싶은 경우
select 도시 from 고객;
select distinct 도시 from 고객; -- distinct는 중복제거



● SQL 명령어 살펴보기

자바에서 프로그래밍에서 가장중요한것은 클래스를 어떻게 만들까. 이다.
데이터 모델링은 테이블을 어떻게 구성할 것이냐(정규화)이다.

그래서 오늘은.
SQL명령어 살펴보기

union 사용 주의점 양쪽 컬럼 갯수가 같아야 한다.
         만약 다른 컬럼으로 갯수만 맞췄으면 데이터 타입(숫자형, 문자형)이 같아야 한다.

union 과 union all 의 차이는 중복 배제 여부
union 은 중복 제거
union all 은 중복 허용

 
as 의미 확인하기
'' 와 ""의 차이 확인하기

trumcabl 사용법 꼭 알아두기!!!

use testdb;

-- 산술연산자
select 23 + 5 as 더하기, 23 -5 , 23 * 5, 23 / 5 as '나누기(실수)', 23 div 5 as '나누기(정수)',
23 % 5, 23 mod 5; -- div는 정수형 나누기


-- 비교연산자
select 23 >= 5, 23 <= 5, 23 > 23, 23 < 23, 23 = 23,
23 != 23, 23 <> 23; -- 결과값이 1또는 0. 1=true, 2=false. != 와 <>는 같지 않다는 의미.


-- 논리연산자 (and, or, not)
select * from 고객
where 도시 = '부산광역시'
and 마일리지 < 1000;



-- 집합연산자 (Union, Union All)
select 고객번호, 담당자명, 마일리지, 도시 from 고객
where 도시 = '부산광역시'
union all
select 고객번호, 담당자명, 마일리지, 도시 from 고객
where 마일리지 < 1000 
order by 마일리지;
/*union 사용 주의점 
1) 첫번쨰와 두번째 select문의 컬럼 갯수 동일
2) 컬럼이 다르다면 데이터타입은 같아야함(하나는 문자, 하나는 숫자면 오류)*/
-- union all 은 중복 허용



-- IS NULL
-- empty value(빈값)와 null은 다른 개념임

-- null
select * from 고객
where 지역 is null;

-- empty value(빈값)
select * from 고객
where 지역 = ' ';


-- IN 연산자 (or연산자의 간편버전)
select 고객번호, 담당자명, 담당자직위 from 고객
where 담당자직위 = '영업 과장' or 담당자직위 = '마케팅 과장';

select 고객번호, 담당자명, 담당자직위 from 고객
where 담당자직위 in ('영업 과장', '마케팅 과장');


-- between and (범위를 표현, ~이상이고 ~이하)
select 담당자명, 마일리지 from 고객
where 마일리지 >= 100000
and 마일리지 <= 200000;

select 담당자명, 마일리지 from 고객
where 마일리지 between 100000 and 200000; -- 시작과 끝값을 포함


-- like 연산자(문자열의 특정 패턴을 필터링)
-- 특수문자 %, _ 사용
select * from 고객
where 도시 like '부산%'; -- %는 여러개의 문자가 존재할 수 있음을 의미

select * from 고객
where 도시 like '%광역%'; -- 


select * from 고객
where 고객번호 like '_C%'; 
-- '_' 은 정확히 한 개의 문자를 의미. 두번째자리가 'C'인 문자열을 의미함 

select * from 고객
where 고객번호 like '__C%'; -- 3번째 문자가 'C’

-- 전화번호 뒷자리가 45로 끝나는 고객
select * from 고객 where 전화번호 like '%45';

-- 전화번호중 뒤에서 3번째부터가 98인 고객
select * from 고객 where 전화번호 like '%98_';

-- 전화번호에 45가 들어가는 고객
select * from 고객 where 전화번호 like '%45%';

-- '서울'에 사는 고객중에 마일리지가 15000점 이상 20000점 이하인 고객
select * from 고객 
where 도시 like '서울%' and (마일리지 between 15000 and 20000);

-- '춘천' 또는 '과천'에 사는 고객중 담당자직위에 '이사'가 들어가는 고객
select * from 고객
where 도시 in ('춘천시', '과천시') 
and 담당자직위 like '%이사%';

-- '광역시' 또는 '특별시'에 살지않는 고객중 마일리지가 많은 상위 3명의 고객
select * from 고객
where 도시 not like '%광역시' and 도시 not like '%특별시'
order by 마일리지 desc
limit 3;
select * from 고객
where not (도시 like '%광역시' or 도시 like '%특별시')
order by 마일리지 desc
limit 3;

-- 제품중에서 '주스' 제품에 대한 정보
select * from 제품
where 제품명 like '%주스%';

-- 단가가 5000원 이상 10000원 이하인 '주스'제품
select * from 제품
where 제품명 like '%주스%' and 단가 between 5000 and 10000;

-- 제품번호가 1,2,4,7,11,20 인 제품
select * from 제품
where 제품번호 in (1,2,4,7,11,20);

/* 재고금액이 높은 상위 10개 제품에 대한 제품번호, 제품명, 단가, 재고,
재고금액(단가*재고) */
select 제품번호, 제품명, 단가, 재고, 단가*재고 as 재고금액
from 제품
order by 5 desc limit 10; -- 숫자는 select의 컬럼순서(5=재고금액)